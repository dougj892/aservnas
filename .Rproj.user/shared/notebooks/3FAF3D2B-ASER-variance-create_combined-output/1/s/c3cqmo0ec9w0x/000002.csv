"0",""
"0","# Create a dataframe of draws using the estimates of variance and the appropriate distribution type"
"0",""
"0","if (dist_type == ""normal""){"
"0","  draws <- data.frame(pers = rnorm(n, mean = 0, sd = var_pers^.5),"
"0","             trans = rnorm(n, mean = 0, sd = var_trans^.5))"
"0","  "
"0","} else if (dist_type == ""beta"") {"
"0","  # with the beta, var = shape1*shape2 / [(shape1+shape2)^2*(shape1 + shape2 + 1)]"
"0","  # note that if mean = .5 then shape1 =  shape2 with the beta.  "
"0","  # Thus, to simplify things, I assume that the mean is .5."
"0","  # With this simplification, var = shape^2/[4shape^2*(2*shape+1)]=1/[8*shape+4]"
"0","  # and shape = (1/8*var)-.5"
"0","    "
"0","  shape_pers <- (1/(8*var_pers))-.5"
"0","  shape_trans <- (1/(8*var_trans))-.5"
"0","  draws <- data.frame(pers = rbeta(n, shape_pers, shape_pers),"
"0","               trans = rbeta(n, shape_trans, shape_trans))"
"0","} else {"
"0","  print(""Couldn't match dist type"")"
"0","}"
"0",""
"0","# Create y, which is the measured score"
"0","draws <- draws %>% mutate(y = pers +trans)"
"0","# Create rank of measured score"
"0","draws$y_rank[order(draws$y)] <- 1:nrow(draws)"
"0","# Create rank of ""true"" score"
"0","draws$pers_rank[order(draws$pers)] <- 1:nrow(draws)"
"0","# Create binaries for whether true and measured scores are in the top centile"
"0","draws <- draws %>%"
"0","  mutate(top_cent_pers = (pers_rank > (1-centile)*n), top_cent_y = (y_rank > (1-centile)*n))"
"0",""
"0","# Calculate accuracy as the percentage of actual "
"0","accuracy <- mean(draws$top_cent_pers[draws$top_cent_y])"
"0","cat(""Reporting accuracy as the proportion of those actually in the top centile which would be ranked as being in the top centile.\n\n"")"
"1","Reporting accuracy as the proportion of those actually in the top centile which would be ranked as being in the top centile.

"
"0","cat(""Inputs:::: \n"")"
"1","Inputs:::: 
"
"0","cat(""centile: "", centile, ""\n"")"
"1","centile: "
"1"," "
"1","0.25"
"1"," "
"1","
"
"0","cat(""Distribution: "", dist_type, ""\n"")"
"1","Distribution: "
"1"," "
"1","normal"
"1"," "
"1","
"
"0","cat(""States or districts: "", state_dist, ""\n"")"
"1","States or districts: "
"1"," "
"1","District"
"1"," "
"1","
"
"0","cat(""Subject: "", subject, ""\n"")"
"1","Subject: "
"1"," "
"1","math"
"1"," "
"1","
"
"0","cat(""Deltas or levels:"", levels_changes, ""\n\n"")"
"1","Deltas or levels:"
"1"," "
"1","Changes"
"1"," "
"1","

"
"0","cat(""accuracy is"", accuracy)"
"1","accuracy is"
"1"," "
"1","0.47916"
